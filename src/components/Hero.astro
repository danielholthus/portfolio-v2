---

---
<div class="hero gap-4 full-height">
	<div id="hero-square"></div>
	<div id="hero-circle"></div>
	<div id="hero-corner"></div>
	<div class="hero-text">
		<h1 class="hero-title highlight">daniel holthus</h1>
		<div id="typing-text-container">
			<span>
				<span class="typing-text"></span>
				<span class="typing-text-cursor">&nbsp</span>
			</span>
		</div>
	</div>
</div>

<script>
	/* Custom scripts here */
	const typedTextSpan = document.querySelector('.typing-text')!
	const cursorSpan = document.querySelector(".typing-text-cursor")!
	const textArray = ["full-stack software engineer", "dev lead", "computer science graduate", "coffee overconsumer"]
	const typingDelay = 70
	const erasingDelay = 35
	const newTextDelay = 1500
	let textArrayIndex = 0
	let charIndex = 0
	function erase() {
		if (charIndex > 0) {
			if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing")
			typedTextSpan.textContent = textArray[textArrayIndex].substring(0, charIndex - 1)
			charIndex--
			setTimeout(erase, erasingDelay)
		} else {
			cursorSpan!.classList.remove("typing")
			textArrayIndex++
			if (textArrayIndex >= textArray.length) textArrayIndex = 0
			setTimeout(type, typingDelay + 1000)
		}
	}
	function type() {
		if (charIndex < textArray[textArrayIndex].length) {
			if (!!cursorSpan && !cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing")
			if (!!typedTextSpan) typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex)
			charIndex++
			setTimeout(type, typingDelay)
		} else {
			cursorSpan!.classList.remove("typing")
			setTimeout(erase, newTextDelay);
		}
	}
	document.addEventListener("DOMContentLoaded", function () {
		setTimeout(type, 1000);
	})
</script>

<style>
	/* Default styles here */
	.hero {
		position: relative;
		border-bottom: 1px solid #222222;
		overflow: hidden;
		display: flex;
		align-items: center;
		justify-content: center;
	}

	#hero-square {
		position: absolute;
		bottom: 0;
		right: 0;
		transform: translate(-3%, 50%);
		width: 25dvh;
		height: 25dvh;
		background-color: var(--accent-blue);
		border: 2px solid #222222;
		border-radius: 10%;
	}

	#hero-corner {
		position: absolute;
		bottom: 100%;
		left: 100%;
		transform: translateX(-50%) translateY(50%) rotate(45deg);
		width: 30vh;
		height: 30vh;
		background-color: #168f22;
		border: 1px solid #222222;
		border-radius: 5%;
	}

	#hero-circle {
		position: absolute;
		top: 20dvh;
		left: 0;
		transform: translateX(-50%);
		width: 20vh;
		height: 20vh;
		background-color: var(--accent-regular);
		border-radius: 50%;
		border: 1px solid #222222;
	}

	#typing-text-container {
		color: transparent;
		-webkit-text-stroke: 1px rgb(58, 58, 58);
		font-weight: 500;
		font-size: max(1rem, 3vw);
		position: absolute;
		top: 100%;
		left: 5%;
	}

	.hero-text {
		position: relative;
		display: flex;
		flex-direction: column;
		justify-content: center;
		text-wrap: nowrap;
	}

	.hero-title {
		font-size: max(2rem, 8.5dvw);
	}

	.typing-text-cursor {
		display: inline-block;
		width: 2px;
		background-color: rgb(21, 21, 21);
		animation: blink 1s infinite;
	}

	.typing-text-cursor.typing {
		animation: none;
	}

	/* Desktop styles */
	@media (min-width: 50em) {
		#hero-square {
			width: 25dvw;
			height: 25dvw;
		}
		#hero-corner {
			width: 30dvw;
			height: 30dvw;
		}
		#hero-circle {
			width: 20dvw;
			height: 20dvw;
		}
	}
</style>
